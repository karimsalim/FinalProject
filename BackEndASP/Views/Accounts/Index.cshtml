@*@model IEnumerable<DAL.Account>*@
@model BackEndASP.ViewModels.AccountViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Liste des comptes du client</h2>

<div class="well">
    <h2>Liste des comptes d'épargnes</h2>
    <a class="btn btn-info" href="@Url.Action("Create", "Accounts", new { id = Model.PersonID, typecompte = "Saving" })">
        Ajouter un compte épargne
        <span class="glyphicon glyphicon-plus-sign"></span>
    </a>
    @if (!string.IsNullOrEmpty(Context.Request.QueryString.Get("Edit")))
    {
        <div id="modalEditSuccess" class="modal" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Modification du compte</h4>
                    </div>
                    <div class="modal-body alert alert-info">
                        <p>Le compte a été modifié.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success" data-dismiss="modal" id="CloseDiv">
                            Fermer
                            <span class="glyphicon glyphicon-remove-circle"></span>
                        </button>
                    </div>
                </div>

            </div>
        </div>
        <script type="text/javascript">
            $("#CloseDiv").click(function () {
                $("#modalEditSuccess").fadeOut();
            });
        </script>
    }


    @if (Model.Savings.Count > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Savings.First().BankCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Savings.First().BranchCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Savings.First().AccountNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Savings.First().Key)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Savings.First().IBAN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Savings.First().BIC)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Savings.First().Balance)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Savings)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BranchCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccountNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Key)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IBAN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BIC)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Balance)
                    </td>
                    <td>
                        <a class="btn btn-warning" href="@Url.Action("Edit","Accounts", new { id = Model.PersonID, typecompte="Saving", idcompte = item.AccountID })">
                            <span class="glyphicon glyphicon-pencil"></span>
                        </a>
                        <a class="btn btn-danger" href="@Url.Action("Delete", "Accounts", new { id = item.AccountID })">
                            <span class="glyphicon glyphicon-trash"></span>
                        </a>
                    </td>
                </tr>
            }

        </table>
    }
    else
    {

        <H4>Le client n'a aucun compte d'épargne</H4>

    }
</div>
<div class="well">
    <h2>Liste des comptes courants</h2>
    <a class="btn btn-info" href="@Url.Action("Create", "Accounts", new { id = Model.PersonID, typecompte = "Deposit" })">
        Ajouter un compte courant
        <span class="glyphicon glyphicon-plus-sign"></span>
    </a>
    @if (Model.Deposits.Count > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Deposits.First().BankCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deposits.First().BranchCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deposits.First().AccountNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deposits.First().Key)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deposits.First().IBAN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deposits.First().BIC)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deposits.First().Balance)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Deposits)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BranchCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccountNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Key)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IBAN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BIC)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Balance)
                    </td>
                    <td>
                        <a class="btn btn-warning" href="@Url.Action("Edit","Accounts", new { id = Model.PersonID, typecompte="Deposit", idcompte = item.AccountID })">
                            <span class="glyphicon glyphicon-pencil"></span>
                        </a>
                        <a class="btn btn-success" href="@Url.Action("Details", "Accounts",new { id = item.AccountID })">
                            <span class="glyphicon glyphicon-zoom-in"></span> <span class="glyphicon glyphicon-credit-card"></span>
                        </a>
                        <a class="btn btn-danger" href="@Url.Action("Delete", "Accounts", new { id = item.AccountID })">
                            <span class="glyphicon glyphicon-trash"></span>
                        </a>
                    </td>
                </tr>
            }

        </table>
    }
    else
    {
        <H4>Le client n'a aucun compte courant.</H4>
    }
</div>

