@model BackEndASP.ViewModels.EditAccountViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Modification</h2>
<div class="well">
    @if (Model.TypeCompte == "Saving")
    {

        using (Html.BeginForm($"EditSaving/{Model.PersonID}","Accounts",FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Modification d'un compte d'épargne</h4>
                <a href="@Url.Action("Index", "Accounts", new { id = Model.PersonID })" class="btn btn-info">
                    <span class="glyphicon glyphicon-arrow-left"></span> Retour à la liste
                </a>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EditSaving.AccountID)

                <div class="form-group">
                    @Html.LabelFor(model => model.EditSaving.BankCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditSaving.BankCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditSaving.BankCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditSaving.BranchCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditSaving.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditSaving.BranchCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditSaving.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditSaving.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditSaving.AccountNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditSaving.Key, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditSaving.Key, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditSaving.Key, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditSaving.IBAN, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditSaving.IBAN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditSaving.IBAN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditSaving.BIC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditSaving.BIC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditSaving.BIC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditSaving.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditSaving.Balance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditSaving.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success" type="submit">
                            Enregistrer <span class="glyphicon glyphicon-floppy-save"></span>
                        </button>
                        <a class="btn btn-danger" href="@Url.Action("Index","Accounts",new { id = Model.PersonID })">
                            Annuler <span class="glyphicon glyphicon-ban-circle"></span>
                        </a>
                    </div>
                </div>
            </div>

        }

    }
    else if (Model.TypeCompte == "Deposit")
    {

        using (Html.BeginForm($"EditDeposit/{Model.PersonID}","Accounts",FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Modification d'un compte courant</h4>
                <a href="@Url.Action("Index", "Accounts", new { id = Model.PersonID })" class="btn btn-info">
                    <span class="glyphicon glyphicon-arrow-left"></span> Retour à la liste
                </a>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EditDeposit.AccountID)

                <div class="form-group">
                    @Html.LabelFor(model => model.EditDeposit.BankCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditDeposit.BankCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditDeposit.BankCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditDeposit.BranchCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditDeposit.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditDeposit.BranchCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditDeposit.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditDeposit.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditDeposit.AccountNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditDeposit.Key, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditDeposit.Key, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditDeposit.Key, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditDeposit.IBAN, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditDeposit.IBAN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditDeposit.IBAN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditDeposit.BIC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditDeposit.BIC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditDeposit.BIC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EditDeposit.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EditDeposit.Balance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditDeposit.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success" type="submit">
                            Enregistrer <span class="glyphicon glyphicon-floppy-save"></span>
                        </button>
                        <a class="btn btn-danger" href="@Url.Action("Index","Accounts",new { id = Model.PersonID })">
                            Annuler <span class="glyphicon glyphicon-ban-circle"></span>
                        </a>
                    </div>
                </div>
            </div>

        }

    }
</div>
<div>
    <a href="@Url.Action("Index", "Accounts", new { id = Model.PersonID })" class="btn btn-info">
        <span class="glyphicon glyphicon-arrow-left"></span> Retour à la liste
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
