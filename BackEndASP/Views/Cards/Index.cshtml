@model BackEndASP.ViewModels.EditAccountViewModel
@*IEnumerable<DAL.Card>*@

@{
    ViewBag.Title = "Index";
}

@*Fenetre modale pour la confirmation de suppression*@
<div class="modal" id="myModals" style="display:none">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close"
                        data-dismiss="modal" aria-label="Close" onclick="CloseModalDel()">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Supprimer une carte bancaire</h4>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

@if (Model.EditDeposit.Cards.Count > 0)
{

    <h2>Details des cartes du compte : </h2>

    <div class="well">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.EditDeposit.Cards.Single().CardId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EditDeposit.Cards.Single().CardNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EditDeposit.Cards.Single().SecurityCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EditDeposit.Cards.Single().NewtorkIssuer)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.EditDeposit.Cards)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NewtorkIssuer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CardNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SecurityCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExpirationDate)
                    </td>
                    <td>
                        <div class="btn-group">
                            @using (Html.BeginForm($"Delete/{item.CardId}", "Cards", FormMethod.Post, new { @class = "FormDelCard btn-group" }))
                            {
                                <a class="btn btn-warning" href="@Url.Action($"Edit/{item.CardId}" +
                                                                $"/Account/{Model.EditDeposit.AccountID}/Client/{Model.PersonID}", "Cards")"
                                   data-toggle="tooltip" data-placement="bottom" title="Modifier la carte bancaire">
                                    <span class="glyphicon glyphicon-pencil"></span>
                                </a>

                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => item.CardId, new { id = "idCard" })
                                @Html.HiddenFor(model => model.EditDeposit.AccountID)
                                @Html.HiddenFor(model => model.PersonID)

                                <button class="btn btn-danger Delete" type="submit" id="Delete"
                                        data-toggle="tooltip" data-placement="bottom" title="Supprimer la carte bancaire"><span class="glyphicon glyphicon-trash"></span></button>
                            }
                        </div>
                    </td>
                </tr>
            }

        </table>

        <div class="btn-group">
            <a href="@Url.Action("Create","Cards", new { id = Model.EditDeposit.AccountID, idclient = Model.PersonID })"
               class="btn btn-info">
                Ajouter une carte bancaire
                <span class="glyphicon glyphicon-plus"></span>
            </a>
        </div>
    </div>
}
else
{
    <h2>Détails des cartes du compte</h2>
    <div class="well">
        <div class="alert-danger badge"><h4>Aucune carte existe pour ce compte.</h4></div>
        <a href="@Url.Action("Create","Cards", new { id = Model.EditDeposit.AccountID, idclient = Model.PersonID })" class="btn btn-info">
            Ajouter une carte banquaire
            <span class="glyphicon glyphicon-plus">
            </span>
        </a>
    </div>
}
<div id="Edit" class="col-xs-12 alert-info" style="border-radius:20px; padding:30px; display:none;">

</div>

@*<a href="@Url.Action("Edit", "Cards", new { id = item.CardId })" class="btn btn-warning"><span class="glyphicon glyphicon-pencil"></span></a>
    @Html.ActionLink("Details", "Details", new { id = item.CardId }) |
    @Html.ActionLink("Delete", "Delete", new { id = item.CardId })
    <a href="@Url.Action("Delete", "Cards", new { id = item.CardId })" class="btn btn-danger"><span class="glyphicon glyphicon-remove-sign"></span></a>*@